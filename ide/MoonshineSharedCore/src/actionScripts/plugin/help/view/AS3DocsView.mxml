<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	width="100%"
	height="100%" 
	backgroundColor="0x444444"
	verticalGap="0"
	implements="actionScripts.ui.IPanelWindow"
	initialize="onInitialized(event)"
	verticalScrollPolicy="off" xmlns:project="actionScripts.ui.project.*">
	<mx:Script>
		<![CDATA[
		import mx.controls.Alert;
		import mx.events.FlexEvent;
		import mx.events.ListEvent;
		
		import actionScripts.plugin.help.GenericTreeItemRenderer;
		import actionScripts.ui.LayoutModifier;
		import actionScripts.ui.tabview.TabViewTab;

		private var httpService:URLLoader;

		public function refresh():void
		{
			compLibTree.invalidateList();
		}

		private function getIconForObject(object:Object):Class
		{
			return null;
		}

		private function initHeader():void
		{
			header.addEventListener(TabViewTab.EVENT_TAB_CLOSE, handleClose);
		}

		private function handleClose(event:Event):void
		{
			if (stage)
			{
				LayoutModifier.removeFromSidebar(this);
			}
		}

		protected function onInitialized(event:FlexEvent):void
		{
			compLibTree.itemRenderer = new ClassFactory(GenericTreeItemRenderer);

			var request:URLRequest = new URLRequest();
			request.url = "/elements/data/UsefulLinks.xml";
			request.method = "GET";

			httpService = new URLLoader();
			httpService.addEventListener(Event.COMPLETE, onSuccess);
			httpService.addEventListener(IOErrorEvent.IO_ERROR, onIOError);
			httpService.load(request);
		}

		/**
		 * On success callback
		 */
		private function onSuccess(event:Event):void
		{
			var rex:RegExp = /^\s*|\s*$/gim;
			var tmpString:String = String(event.target.data).replace(rex, '');
			compLibTree.dataProvider = new XML(tmpString);

			// finally clear the event
			dispose();
		}

		/**
		 * On error callback
		 */
		private function onIOError(event:IOErrorEvent, customMessage:String = null):void
		{
			Alert.show(event.text, event.type);

			// finally clear the event
			dispose();
		}

		protected function dispose():void
		{
			// probable termination
			if (!httpService) return;

			httpService.close();
			httpService.removeEventListener(Event.COMPLETE, onSuccess);
			httpService.removeEventListener(IOErrorEvent.IO_ERROR, onIOError);
			httpService = null;
		}

		private function getIconForFile(object:Object):Class
		{
			return null;
		}

		protected function treeItemClick(event:ListEvent):void
		{
			var selectedItem:Object = compLibTree.selectedItem;
			var link:String = String(selectedItem.@link);
			if (link)
			{
				navigateToURL(new URLRequest(link), "_blank");
			}
			else
			{
				compLibTree.expandItem(selectedItem, !compLibTree.isItemOpen(selectedItem));
			}
		}
		]]>
	</mx:Script>
	
	<project:ProjectViewHeader
		id="header"
		label="Useful Links" 
		width="100%"
		creationComplete="initHeader()" />
	
	<mx:Tree id="compLibTree"
			 
			 color="0xEEEEEE"
			 contentBackgroundColor="0x0"
			 rollOverColor="0x393939"
			 selectionColor="0x393939"
			 alternatingItemColors="[0x444444, 0x4d4c4c]"
			 verticalScrollBarStyleName="black"
			 
			 borderVisible="false"
			 rowHeight="18"
			 useRollOver="true"
			 doubleClickEnabled="true"
			 
			 iconFunction="{getIconForFile}"
			 
			 width="100%" height="100%" 
			 showRoot="false" labelField="@label" 
			 borderStyle="none"
			 itemClick="treeItemClick(event)"/>
</mx:VBox>