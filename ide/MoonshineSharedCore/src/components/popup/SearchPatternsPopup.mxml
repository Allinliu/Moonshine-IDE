<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   backgroundColor="0xf5f5f5"
				   width="350" height="450" minWidth="300" minHeight="200" autoLayout="true" title="Select Pattern"
				   xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
				   skinClass="components.skins.ResizableTitleWindowSkin"
				   creationComplete="onInitialized(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import actionScripts.valueObjects.ConstantsCoreVO;
			
			public var isClosedAsSubmit:Boolean;
			
			[Bindable] public var pattens:ArrayCollection;
			
			protected function onInitialized(event:FlexEvent):void
			{
				if (!pattens)
				{
					pattens = new ArrayCollection();
					for each (var i:String in ConstantsCoreVO.READABLE_FILES)
					{
						pattens.addItem({label:i, isSelected: false});
					}
				}
			}
			
			protected function selectAll(value:Boolean):void
			{
				for each (var i:Object in pattens)
				{
					i.isSelected = value;
				}
				
				pattens.refresh();
			}
			
			private function onSubmit():void
			{
				isClosedAsSubmit = true;
				closeThis();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RadioButtonGroup id="rbgScope"/>
	</fx:Declarations>
	
	<s:VGroup height="100%" width="100%" 
			  gap="10" paddingLeft="12" paddingBottom="3" paddingTop="9" paddingRight="13">
		<s:Label text="Reduce selection to only files of type(s):"/>
		<s:List id="lstExtensions" 
				width="100%" height="100%" dataProvider="{pattens}"
				styleName="multiLineList">
			<s:itemRenderer>
				<fx:Component>
					<s:ItemRenderer width="100%" height="22" label="*.{data.label}">
						<fx:Script>
							<![CDATA[
								override public function set data(value:Object):void
								{
									if (value) super.data = value;
								}
							]]>
						</fx:Script>
						
						<s:layout>
							<s:HorizontalLayout verticalAlign="middle" paddingLeft="4" paddingRight="6" gap="10"/>
						</s:layout>
						
						<s:CheckBox id="cbSelect"
									change="data.isSelected = cbSelect.selected" selected="{data.isSelected}"/>
					</s:ItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:List>
	</s:VGroup>
	
	<resizableTitleWindow:controlBarContent>
		<s:Button label="Select All"
				  styleName="darkButton"
				  click="selectAll(true)"/>
		<s:Button label="Deselect All"
				  styleName="darkButton"
				  click="selectAll(false)"/>
		<s:Spacer width="100%"/>
		<s:Button label="OK"
				  styleName="darkButton"
				  click="onSubmit()"/>
	</resizableTitleWindow:controlBarContent>
</resizableTitleWindow:ResizableTitleWindow>